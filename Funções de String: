-- Exercicio 1 Completo 

CREATE TABLE nomes (
    nome VARCHAR(50)
);

INSERT INTO nomes (nome)
VALUES
    ('Pedro'),
    ('Robert'),
    ('Maria Clara'),
    ('João');
-----

UPDATE nomes
SET nome = UPPER(nome);
-----

SELECT nome, LENGTH(nome) AS tamanho FROM nomes;
-----

UPDATE nomes
SET nome = CONCAT('Sr. ', nome)
WHERE nome = 'Roberto' OR nome = 'João';

UPDATE nomes
SET nome = CONCAT('Sra. ', nome)
WHERE nome = 'Roberta' OR nome = 'Maria Clara';
-----

-- Exercicio 2 Completo 
CREATE TABLE produtos (
    produto VARCHAR(50),
    preco DECIMAL(10, 2),
    quantidade INT
);
-----

UPDATE produtos
SET preco = ROUND(preco, 2);
-----

SELECT produto, ABS(quantidade) AS quantidade_absoluta FROM produtos;
-----

SELECT AVG(preco) AS media_precos FROM produtos;
-----

-- Exercicio 3 Completo 
CREATE TABLE eventos (
    data_evento DATE
);

INSERT INTO eventos (data_evento)
VALUES
    ('2023-10-15'),
    ('2023-10-20'),
    ('2023-10-25');
-----

SELECT DATEDIFF('2023-10-25', '2023-10-15') AS dias_entre_datas;
-----

SELECT data_evento, DAYNAME(data_evento) AS nome_dia_semana FROM eventos;
-----


INSERT INTO eventos (data_evento)
VALUES (NOW());
-----

-- Exercicio 4 Completo 
SELECT produto, 
       IF(quantidade > 0, 'Em estoque', 'Fora de estoque') AS status_estoque
FROM produtos;
-----

SELECT produto,
       CASE
           WHEN preco < 10 THEN 'Barato'
           WHEN preco >= 10 AND preco < 50 THEN 'Médio'
           ELSE 'Caro'
       END AS categoria_preco
FROM produtos;
-----

-- Exercicio 5 Completo 
DELIMITER //
CREATE FUNCTION TOTAL_VALOR(preco DECIMAL(10, 2), quantidade INT)
RETURNS DECIMAL(10, 2)
BEGIN
    RETURN preco * quantidade;
END;
//
DELIMITER ;
-----

SELECT produto, preco, quantidade, TOTAL_VALOR(preco, quantidade) AS valor_total
FROM produtos;
------

-- Exercicio 6 Completo 
SELECT COUNT(*) AS numero_total_de_produtos FROM produtos;
-----

SELECT produto, preco
FROM produtos
WHERE preco = (SELECT MAX(preco) FROM produtos);
-----

SELECT produto, preco
FROM produtos
WHERE preco = (SELECT MIN(preco) FROM produtos);
-----

SELECT SUM(IF(quantidade > 0, preco * quantidade, 0)) AS soma_total_em_estoque FROM produtos;
-----

-- Exercicio 7 Completo 
DELIMITER //
CREATE FUNCTION FATORIAL(n INT)
RETURNS INT
BEGIN
    DECLARE resultado INT;
    SET resultado = 1;
    WHILE n > 0 DO
        SET resultado = resultado * n;
        SET n = n - 1;
    END WHILE;
    RETURN resultado;
END;
//
DELIMITER ;
-----

DELIMITER //
CREATE FUNCTION f_exponencial(base DECIMAL(10, 2), expoente INT)
RETURNS DECIMAL(10, 2)
BEGIN
    DECLARE resultado DECIMAL(10, 2);
    SET resultado = 1;
    WHILE expoente > 0 DO
        SET resultado = resultado * base;
        SET expoente = expoente - 1;
    END WHILE;
    RETURN resultado;
END;
//
DELIMITER ;
-----

DELIMITER //
CREATE FUNCTION IS_PALINDROMO(palavra VARCHAR(255))
RETURNS INT
BEGIN
    DECLARE palavra_invertida VARCHAR(255);
    SET palavra_invertida = REVERSE(palavra);
    IF palavra = palavra_invertida THEN
        RETURN 1;
    ELSE
        RETURN 0;
    END IF;
END;
//
DELIMITER ;
